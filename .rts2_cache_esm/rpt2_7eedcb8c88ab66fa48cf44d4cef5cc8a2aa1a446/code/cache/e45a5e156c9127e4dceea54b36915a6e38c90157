{"code":"import * as React from 'react';\r\nimport styles from './style.module.css';\r\nexport const SpinnerMultiColor = ({ text: text, textStyle: textStyle, firstSectionStyle: firstSectionStyle, secondSectionStyle: secondSectionStyle, thirdSectionStyle: thirdSectionStyle, sizeStyle: sizeStyle, }) => {\r\n    // text --------\r\n    const [textT, setTextT] = React.useState('Loading');\r\n    React.useEffect(() => {\r\n        if (text) {\r\n            setTextT(text);\r\n        }\r\n        return () => setTextT('Loading');\r\n    }, [text]);\r\n    // text additional style --------\r\n    const [textStyleT, setTextStyleT] = React.useState({});\r\n    React.useEffect(() => {\r\n        if (textStyle) {\r\n            setTextStyleT(textStyle);\r\n        }\r\n        return () => setTextStyleT({});\r\n    }, [textStyle]);\r\n    // additional style for spinner container ---------\r\n    const [spinnerSize, setSpinnerSize] = React.useState({});\r\n    React.useEffect(() => {\r\n        // check for width and height equality\r\n        if (sizeStyle) {\r\n            if (sizeStyle.hasOwnProperty('width') &&\r\n                sizeStyle.hasOwnProperty('height')) {\r\n                if (sizeStyle['width'] !== sizeStyle['height']) {\r\n                    console.error('SpinnerMultiColor error: If spinner height and width set as property the value has to be the equal!');\r\n                }\r\n                else {\r\n                    setSpinnerSize(sizeStyle);\r\n                }\r\n            }\r\n            else if (sizeStyle.hasOwnProperty('width') &&\r\n                !sizeStyle.hasOwnProperty('height')) {\r\n                console.error('SpinnerMultiColor error: If width set on spinner height need to be set too and it has to be equal value.');\r\n            }\r\n            else if (sizeStyle.hasOwnProperty('height') &&\r\n                !sizeStyle.hasOwnProperty('width')) {\r\n                console.error('SpinnerMultiColor error: If height set on spinner width need to be set too and it has to be equal value.');\r\n            }\r\n            else {\r\n                setSpinnerSize(sizeStyle);\r\n            }\r\n        }\r\n        return () => setSpinnerSize({});\r\n    }, [sizeStyle, setSpinnerSize]);\r\n    // additional style for sections --------\r\n    //TOP -----\r\n    const [first, setFirst] = React.useState({\r\n        borderTopColor: 'red',\r\n    });\r\n    React.useEffect(() => {\r\n        if (firstSectionStyle) {\r\n            setFirst({\r\n                ...first,\r\n                ...firstSectionStyle,\r\n            });\r\n        }\r\n        return () => setFirst({\r\n            borderTopColor: 'red',\r\n        });\r\n    }, [setFirst, firstSectionStyle]);\r\n    //LEFT -----\r\n    const [leftS, setSecond] = React.useState({\r\n        borderLeftColor: 'blue',\r\n    });\r\n    React.useEffect(() => {\r\n        if (secondSectionStyle) {\r\n            setSecond({\r\n                ...leftS,\r\n                ...secondSectionStyle,\r\n            });\r\n        }\r\n        return () => setSecond({\r\n            borderLeftColor: 'blue',\r\n        });\r\n    }, [setSecond, secondSectionStyle]);\r\n    //RIGHT -----\r\n    const [rightS, setRightS] = React.useState({\r\n        borderRightColor: 'green',\r\n    });\r\n    React.useEffect(() => {\r\n        if (thirdSectionStyle) {\r\n            setRightS({\r\n                ...rightS,\r\n                ...thirdSectionStyle,\r\n            });\r\n        }\r\n        return () => setRightS({\r\n            borderRightColor: 'green',\r\n        });\r\n    }, [thirdSectionStyle, setRightS]);\r\n    return (React.createElement(\"div\", { className: styles.spinner, \"data-testid\": \"container\", style: spinnerSize ? spinnerSize : undefined },\r\n        React.createElement(\"span\", { style: textStyleT ? textStyleT : undefined }, textT),\r\n        React.createElement(\"div\", { className: styles.spinnerSectorOne, \"data-testid\": \"first\", style: first }),\r\n        React.createElement(\"div\", { className: styles.spinnerSectorTwo, \"data-testid\": \"second\", style: leftS }),\r\n        React.createElement(\"div\", { className: styles.spinnerSectorThree, \"data-testid\": \"third\", style: rightS })));\r\n};\r\nexport const Thing = () => {\r\n    return (React.createElement(\"div\", { className: styles.test }, \"the snozzberries taste like snozzberries\"));\r\n};\r\n//# sourceMappingURL=index.js.map","references":["C:/Users/Gabi/WebstormProjects/react-scrape/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"C:/Users/Gabi/WebstormProjects/react-scrape/index.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nexport interface Props {\r\n    text?: string;\r\n    textStyle?: {};\r\n    firstSectionStyle?: {};\r\n    secondSectionStyle?: {};\r\n    thirdSectionStyle?: {};\r\n    sizeStyle?: {\r\n        width: undefined | string;\r\n        height: undefined | string;\r\n    };\r\n}\r\nexport declare const SpinnerMultiColor: React.FC<Props>;\r\nexport declare const Thing: () => JSX.Element;\r\n"}}
